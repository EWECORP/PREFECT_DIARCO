USE [data-sync]
GO

/****** Object:  StoredProcedure [dbo].[SP_BASE_STOCK_DMZ]    Script Date: 20/08/2025 11:19:38 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE         PROCEDURE [dbo].[SP_BASE_STOCK_DMZ]
    @C_SUCU_EMPR INT = NULL,
    @C_FAMILIA INT = NULL,
    @INCLUIR_NO_HABILITADOS BIT = 0
AS
BEGIN
    SET NOCOUNT ON;

    DECLARE @FECHA_FUTURA DATETIME = '2099-12-31';
    DECLARE @fecha DATE = DATEADD(DAY, -1, GETDATE());

    -- CTE: Sucursales excluidas
    --WITH CTE_SUCURSAL_EXCLUIDA AS (
    --    SELECT valor AS C_SUCU_EMPR FROM (VALUES (6), (8), (14), (17), (39), (40), (300), (80), (81), (83), (84), (88)) AS fijos(valor)
    --    UNION
    --    SELECT C_SUCU_EMPR FROM [DIARCOP001].[DiarcoP].[dbo].[T900_SUCURSALES_EXCLUIDAS_GERENCIA_DB]
    --),
    
    -- CTE: Pedidos pendientes
    WITH CTE_PEDIDOS_PENDIENTES AS (
        SELECT 
            OC_CABE.C_SUCU_COMPRA AS SUCU_COMPRA,
			OC_CABE.C_SUCU_DESTINO,
			OC_CABE.C_SUCU_DESTINO_ALT,
            OC_DETA.C_ARTICULO,
            SUM((OC_DETA.Q_BULTOS_PROV_PED * OC_DETA.Q_FACTOR_PROV_PED) - OC_DETA.Q_UNID_CUMPLIDAS) AS Pendientes
        FROM repl.T080_OC_CABE OC_CABE
        INNER JOIN repl.T081_OC_DETA OC_DETA  
            ON OC_DETA.C_OC = OC_CABE.C_OC 
            AND OC_DETA.U_PREFIJO_OC = OC_CABE.U_PREFIJO_OC 
            AND OC_DETA.U_SUFIJO_OC = OC_CABE.U_SUFIJO_OC 
        WHERE ((OC_DETA.Q_BULTOS_PROV_PED * OC_DETA.Q_FACTOR_PROV_PED) - OC_DETA.Q_UNID_CUMPLIDAS) <> 0
            AND OC_CABE.C_SITUAC = 1
            AND OC_CABE.C_SUCU_COMPRA <> 300
        GROUP BY OC_CABE.C_SUCU_COMPRA,OC_CABE.C_SUCU_DESTINO,
			OC_CABE.C_SUCU_DESTINO_ALT,OC_DETA.C_ARTICULO
    ),

    -- CTE: Promociones activas
    CTE_PROMO_VENCI AS (
        SELECT C_SUCU_EMPR, C_ARTICULO FROM [repl].[T230_FACTURADOR_NEGOCIOS_ESPECIALES_POR_CANTIDAD]
        WHERE @fecha BETWEEN F_DESDE AND F_HASTA AND Q_UNIDADES_KILOS_SALDO > 0
    )

    SELECT 
        STK.C_ARTICULO AS Codigo_Articulo,
        STK.C_SUCU_EMPR AS Codigo_Sucursal,
        ART.C_PROVEEDOR_PRIMARIO AS Codigo_Proveedor,

        ART_SUC.I_PRECIO_VTA AS Precio_Venta,
        ART_SUC.I_COSTO_ESTADISTICO AS Precio_Costo,
        ART_SUC.Q_FACTOR_VTA_SUCU AS Factor_Venta,
		
		ART_SUC.Q_ULT_ING_STOCK AS Ultimo_Ingreso,
		ART_SUC.F_ULT_ING_STOCK AS Fecha_Ultimo_Ingreso,
		ART_SUC.F_ULTIMA_VTA AS Fecha_Ultima_Venta,

        ART.M_VENDE_POR_PESO AS M_Vende_Por_Peso,

        (R.Q_VENTA_15_DIAS * ART_SUC.Q_FACTOR_VTA_SUCU) AS Venta_Unidades_1Q,
        (R.Q_VENTA_30_DIAS * ART_SUC.Q_FACTOR_VTA_SUCU) AS Venta_Unidades_2Q,
        ((R.Q_VENTA_30_DIAS + R.Q_VENTA_15_DIAS) * ART_SUC.Q_FACTOR_VTA_SUCU) AS Venta_Mes_Unidades,
        ((R.Q_VENTA_30_DIAS + R.Q_VENTA_15_DIAS) * ART_SUC.Q_FACTOR_VTA_SUCU * ART_SUC.I_COSTO_ESTADISTICO) AS Venta_Mes_Valorizada,

        CASE 
            WHEN (ISNULL(R.Q_VENTA_30_DIAS, 0) + ISNULL(R.Q_VENTA_15_DIAS, 0)) * ISNULL(ART_SUC.Q_FACTOR_VTA_SUCU, 0) * ISNULL(ART_SUC.I_COSTO_ESTADISTICO, 0) = 0 THEN NULL
            ELSE 
                ROUND(
                    ((ISNULL(STK.Q_UNID_ARTICULO, 0) + ISNULL(STK.Q_PESO_ARTICULO, 0)) * ISNULL(ART_SUC.I_COSTO_ESTADISTICO, 0)) / 
                    NULLIF(
                        (ISNULL(R.Q_VENTA_30_DIAS, 0) + ISNULL(R.Q_VENTA_15_DIAS, 0)) * ISNULL(ART_SUC.Q_FACTOR_VTA_SUCU, 0) * ISNULL(ART_SUC.I_COSTO_ESTADISTICO, 0),
                        0
                    ), 
                    0
                ) * 30
        END AS Dias_Stock,

        @fecha AS Fecha_Stock,
        CASE 
            WHEN ART.M_VENDE_POR_PESO = 'N' THEN DBO.NORMALIZA_STRING(STK.Q_UNID_ARTICULO) 
            ELSE DBO.NORMALIZA_STRING(STK.Q_PESO_ARTICULO) 
        END AS Stock,

        (ART_SUC.Q_TRANSF_PEND * ART_SUC.Q_FACTOR_VTA_SUCU ) AS Transfer_Pendiente,
        ISNULL(DBO.NORMALIZA_STRING(PP.Pendientes), 0) AS Pedido_Pendiente,

        CASE WHEN ART_SUC.M_OFERTA_SUCU = 'S' THEN 1 ELSE 0 END AS Promocion,
        '' AS Lote,
        @FECHA_FUTURA AS Validez_Lote,
        0 AS Stock_Reserva,
        CASE WHEN PROMO_VENCI.C_ARTICULO IS NOT NULL THEN 1 ELSE 0 END AS Validez_Promocion,

        COSTO.Q_DIAS_STOCK,
        COSTO.Q_DIAS_SOBRE_STOCK,
        COSTO.I_LISTA_CALCULADO,
        (R.Q_REPONER_INCLUIDO_SOBRE_STOCK * ART_SUC.Q_FACTOR_VTA_SUCU) AS Pedido_SGM

    FROM repl.T060_STOCK STK
    INNER JOIN repl.T050_ARTICULOS ART 
        ON ART.C_ARTICULO = STK.C_ARTICULO
    INNER JOIN repl.T100_EMPRESA_SUC SUC 
        ON STK.C_SUCU_EMPR = SUC.C_SUCU_EMPR
    LEFT JOIN repl.T051_ARTICULOS_SUCURSAL ART_SUC 
        ON ART_SUC.C_ARTICULO = STK.C_ARTICULO AND ART_SUC.C_SUCU_EMPR = STK.C_SUCU_EMPR
        AND (@INCLUIR_NO_HABILITADOS = 1 OR ((ART.C_FAMILIA <> 4) AND ART_SUC.M_HABILITADO_SUCU = 'S'))
    LEFT JOIN repl.T055_ARTICULOS_CONDCOMPRA_COSTOS COSTO 
        ON COSTO.C_ARTICULO = STK.C_ARTICULO AND COSTO.C_SUCU_EMPR = STK.C_SUCU_EMPR
    LEFT JOIN repl.T710_ESTADIS_REPOSICION R 
        ON R.C_ARTICULO = STK.C_ARTICULO AND R.C_SUCU_EMPR = STK.C_SUCU_EMPR
    LEFT JOIN CTE_PEDIDOS_PENDIENTES PP 
        ON PP.C_ARTICULO = STK.C_ARTICULO AND PP.C_SUCU_DESTINO = STK.C_SUCU_EMPR    --- Se cambi√≥ para Tomar el Stock en la SUCURSAL DENTINO
    LEFT JOIN CTE_PROMO_VENCI PROMO_VENCI 
        ON PROMO_VENCI.C_SUCU_EMPR = STK.C_SUCU_EMPR AND PROMO_VENCI.C_ARTICULO = STK.C_ARTICULO

    WHERE 
        COSTO.C_PROVEEDOR = ART.C_PROVEEDOR_PRIMARIO
        AND SUC.M_SUCU_VIRTUAL = 'N'
        AND SUC.C_SUCU_EMPR NOT IN (SELECT [C_SUCU_EMPR] FROM [data-sync].[dbo].[SUCURSALES_EXCLUIDAS])
        AND (@C_SUCU_EMPR IS NULL OR STK.C_SUCU_EMPR = @C_SUCU_EMPR)
        AND (@C_FAMILIA IS NULL OR ART.C_FAMILIA = @C_FAMILIA);
END
GO

